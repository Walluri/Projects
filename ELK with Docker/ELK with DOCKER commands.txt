sudo docker run -it --rm -p 514:514/udp -p 601:601 -v "$(pwd)/syslog-ng.conf":/etc/syslog-ng/syslog-ng.conf -v "$(pwd)/data":/var/log --name syslog-ng --net elknetwork balabit/syslog-ng:latest -edv
 

sudo docker rm --force 43
sudo docker image inspect balabit/syslog-ng

------------------------------------------------------------------

sudo nano /etc/rsyslog.d/22-edge.conf 

sudo service rsyslog stop
sudo service rsyslog restart
sudo service rsyslog status

echo "1" >> /home/gcpokati/logs/sample.log

cat /var/log/syslog

sudo service filebeat stop
sudo service filebeat restart
sudo service filebeat status
sudo nano /etc/filebeat/filebeat.yml
sudo cat /var/log/filebeat/filebeat

sudo nano ~/elk/logstash/logstash.conf 

traffic in a particular port 
sudo tcpdump -A -i any dst port 10514

who is using a particular port  :
sudo netstat -peanut | grep ":9200"
sudo netstat -peanut | grep ":10514"

check if a particular port is open
sudo apt install nmap
nmap 127.0.0.1 -p 
OR
sudo lsof -i -n -P | grep TCP | grep 10514

curl -XGET 'localhost:9200'
"number" : "1.7.2",

rsyslogd -N1 - is rsyslog config correct

1.create a docker network :
$sudo docker network create elknetwork

2. docker run blah blah -f ~/one.config
give a config file path to the docker image

------------------------------------------------------------------ ELASTIC SEARCH --------------------------------------------------------------

sudo docker run -d --rm -h elasticsearch --name elasticsearch --net elknetwork -v "$(pwd)/data":/var/data -v "$(pwd)/logs":/var/logs -v "$(pwd)/elasticsearch.yml":/usr/share/elasticsearch/config/elasticsearch.yml -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" elasticsearch:7.3.2


sudo docker run -d -h elasticsearch --name elasticsearch --net elknetwork -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" elasticsearch:7.3.2


curl -XGET 'http://localhost:9200/_all/_search?q=*&pretty'
curl -XGET 'localhost:9200/_cat/indices?v&pretty'
curl http://localhost:9200/_cat/health

curl -X POST 'http://localhost:9200/tutorial/helloworld/1' -d '{ "message": "Hello World!" }'

------------------------------------------------------------------ KIBANA  --------------------------------------------------------------

//sudo docker run -d -p 5601:5601 -h kibana --name kibana /--net elknetwork/ --link elasticsearch:elasticsearch kibana:7.3.2
sudo docker run -d -p 5601:5601 -h kibana --name kibana --net elknetwork --link elasticsearch:elasticsearch kibana:7.3.2


----------- NGINX-------

sudo docker run --name nginxRP --net elknetwork -p 80:80 -v "$(pwd)/default.conf":"/etc/nginx/conf.d/default.conf" -d nginx

walluri@user1:/home/gcpokati/nginx$ cat default.conf
server {
    listen       80;
    server_name  localhost;

    location / {
        proxy_pass http://kibana:5601/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

------------------------------------------------------------------ LOG STASH--------------------------------------------------------------

sudo docker run -d -p 5001:5001 -h logstash --name logstash --net elknetwork --link elasticsearch:elasticsearch  --rm -v "$(pwd)":/usr/share/logstash/pipeline/ logstash:7.3.2

sudo docker run -d --name logstash --link elasticsearch:elasticsearch --network elknetwork -p 5001:5001 -p 10514:10514 -v "$(pwd)/logstash.conf":/usr/share/logstash/pipeline/logstash.conf logstash:7.3.2

sudo docker run --rm -it --name logstash --link elasticsearch:elasticsearch --network elknetwork -p 5001:5001 -p 10514:10514 -v "$(pwd)/logstash.conf":/usr/share/logstash/pipeline/logstash.conf -v "$(pwd)/sample.log":/var/sample.log logstash:7.3.2

$ bin/logstash agent -f httpd-shipper.conf --configtest
--------------------------------------------------------------------------------------------------------------------------------




--------------------------------------------------------------------- ~/elk/logstash$ cat logstash.conf -----------------------------------------


input {
#  #tcp {
#    # host => "localhost"
#    # port => 10514
#    mode => "client"
     #codec => json_lines
#    type => "rsyslog"
     ## }
 #beats{
        #port => 10514
      #}
 syslog {
        port =>10514
        }
}
# This is an empty filter block.  You can later add other filters here to further process
# your log lines
filter { }
# This output block will send all events of type "rsyslog" to Elasticsearch at the configured
# host and port into daily indices of the pattern, "rsyslog-YYYY.MM.DD"
output {
#  if [type] == "rsyslog" {
    elasticsearch {
      hosts => [ "elasticsearch:9200" ]
    }
#  }
stdout { }
}
#input{
#file {
#type => "dummy log"
#path => "/var/sample.log"
#start_position => "beginning"
#sincedb_path => "NUL"
#ignore_older => 0
#}
#}
#output {
#stdout { }
#}


--------------------------------------------------------------------- ~/elk/logstash$ cat /etc/rsyslog.d/22-edge.conf ---------------------------------------------------------------------

#module(load="imfile" PollingInterval="10")
input(type="imfile"  File="/home/gcpokati/logs/sample.log"  Tag="Edge:"  Severity="error"  Facility="local7")
template(name="json-template"
  type="list") {
    constant(value="{")
      constant(value="\"@timestamp\":\"")     property(name="timereported" dateFormat="rfc3339")
      constant(value="\",\"@version\":\"1")
      constant(value="\",\"message\":\"")     property(name="msg" format="json")
      constant(value="\",\"sysloghost\":\"")  property(name="hostname")
      constant(value="\",\"severity\":\"")    property(name="syslogseverity-text")
      constant(value="\",\"facility\":\"")    property(name="syslogfacility-text")
      constant(value="\",\"programname\":\"") property(name="programname")
      constant(value="\",\"procid\":\"")      property(name="procid")
    constant(value="\"}\n")
}
if($syslogtag startswith "Edge:") then
{
#/var/log/matter.log
action(type="omfwd" Target="127.0.0.1" Port="10514" Protocol="tcp" Device="eth0" template="json-template")
& stop
}

--------------  cat /etc/rsyslog.conf
#  /etc/rsyslog.conf    Configuration file for rsyslog.
#
#                       For more information see
#                       /usr/share/doc/rsyslog-doc/html/rsyslog_conf.html
#
#  Default logging rules can be found in /etc/rsyslog.d/50-default.conf
#################
#### MODULES ####
#################
module(load="imuxsock") # provides support for local system logging
#module(load="immark")  # provides --MARK-- message capability
module(load="imfile")
#module(load="omfwd")
# provides UDP syslog reception
#module(load="imudp")
#input(type="imudp" port="514")
# provides TCP syslog reception
module(load="imtcp")
input(type="imtcp" port="514")
# provides kernel logging support and enable non-kernel klog messages
module(load="imklog" permitnonkernelfacility="on")
###########################
#### GLOBAL DIRECTIVES ####
###########################
#
# Use traditional timestamp format.
# To enable high precision timestamps, comment out the following line.
#
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat
# Filter duplicated messages
$RepeatedMsgReduction on
#
# Set the default permissions for all log files.
#
#$FileOwner syslog
#$FileGroup adm
#$FileCreateMode 0640
#$DirCreateMode 0755
#$Umask 0022
#$PrivDropToUser syslog
#$PrivDropToGroup syslog

#
# Where to place spool and state files
#
$WorkDirectory /var/spool/rsyslog

#
# Include all config files in /etc/rsyslog.d/
#


***************************walluri@user1:/home/gcpokati/elk/elasticsearch$ cat elasticsearch.yml ******************************
#node.name: "e"
cluster.name: "docker-cluster"
network.host: 0.0.0.0
path.data: /var/data
path.logs: /var/logs
discovery.zen.minimum_master_nodes: 1
discovery.type: single-node

